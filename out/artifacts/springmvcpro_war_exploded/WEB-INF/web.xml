<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--配置srpingmvc前端控制器-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- contextConfigLocation配置springmvc加载的配置文件（处理器映射器，适配器等）
             如果不配置contextConfigLocation，默认加载的是web/web-inf下面的/servlet名称-sevrlet.xml(dispatcher-servlet.xml)
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!--配置servlet映射路径-->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>*.action</url-pattern>
        <!--url-pattern配置方式
        第一种：*.action访问以.action结尾的由DispactherServlet解析
        第二种:/所有访问的地址都由DispatcherServlet解析（对于静态文件图片、js、jsp的解析,我们需要配置不让DispactherServlet解析）
        使用此种方法可以实现ResultFUl风格的url
        第三种：/* 这种配置不对，使用这种配置，最终要转发到一个jsp页面，仍然由DispactherServlet解析jsp地址，不能根据jsp页面找到Handler会报错
        -->
    </servlet-mapping>

</web-app>