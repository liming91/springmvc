<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.ming"></context:component-scan>
    <!--配置处理器适配器
    1. 所有的适配器都实现了HandlerAdapter接口
    源码：此适配器SimpleControllerHandlerAdapter实现Controller接口的Handler
    public boolean supports(Object handler) {
      return handler instanceof Controller;
     }
     2.开发Handler,需要实现Controller接口，才能由SimpleControllerHandlerAdapter适配器来执行
    -->
  <!--  <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>-->
    <!--另一个非注解的适配器-->
<!--    <bean class="org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter"/>-->

    <!--配置处理器映射器
    将bean的name来作为url进行查找，需要配置Handler时指定你的bean name(就是url)
    -->
<!--    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>-->

    <!--配置Handler就是controller，在spring容器中加载-->
<!--    <bean id="itemsController1" name="/queryItems.action" class="com.ming.controller.ItemsController1"/>-->
<!--    <bean id="itemsController2" class="com.ming.controller.ItemsController2"/>-->
    <!--配置注解的Handler可以单独配置
    实际开发中建议使用组件扫描<context:component-scan>,就不用配置Handler
    -->
<!--    <bean class="com.ming.controller.ItemsController3"/>-->

    <!--简单的url映射-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">-->
<!--        <property name="mappings">-->
<!--            <props>-->
<!--                &lt;!&ndash; 对itemsController1进行url映射,url是/queryItems1.action-->
<!--                 key:浏览器访问的url和value:contrller的bean id&ndash;&gt;-->
<!--                <prop key="/queryItems1.action">itemsController1</prop>-->
<!--                <prop key="/queryItems2.action">itemsController2</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

    <!--注解的映射器-->
<!--   <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->
<!--    &lt;!&ndash;注解的适配器&ndash;&gt;-->
<!--  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->
    <!--使用mvc:annotation-driven的注解驱动可以代替上面的注解适配器和映射器
    默认加载了很多的参数绑定方法，比如json的转换解析器就默认加载了
    实际开发中使用mvc:annotation-driven注解
    -->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!--视图解析器
    解析jsp视图，默认使用jstl标签，classpath下面有jstl的包
    -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
</beans>